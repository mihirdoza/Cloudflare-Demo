       {/* <div className="mb-3 d-flex justify-content-between align-items-center">
          <label className="form-label w-25">Manufacturer({manufacturers.length})</label>
          <select
            className="form-select ms-4"
            value={selectedManufacturer}
            onChange={(e) => setSelectedManufacturer(e.target.value)}
          >
            <option value="">Select Manufacturer</option>
            {manufacturers.map((manu, index) => (
              <option key={index} value={manu}>
                {manu}
              </option>
            ))}
          </select>
        </div> */}


        {/* <div className="mb-3 d-flex justify-content-between align-items-center">
          <label className="form-label">Equipment Type({equipmentType.length})</label>
          <select
            className="form-select ms-4 "
            value={selectedEquipmentType}
            onChange={(e) => setSelectedEquipmentType(e.target.value)}
          >
            <option value="" disabled={true}>Select Equipment</option>
            {equipmentType.map((eq, index) => (
              <option key={index} value={eq}>
                {eq}
              </option>
            ))}
          </select>
        </div> */}
        {/* <div className="mb-3 d-flex justify-content-between align-items-center">
          <label className="form-label">Product Line({productLine.length})</label>
          <select
            className="form-select ms-4"
            value={selectedProductLine}
            onChange={(e) => setSelectedProductLine(e.target.value)}
          >
            <option value="">Select Product</option>

            {productLine.map((pr, index) => (
              <option key={index} value={pr}>
                {pr}
              </option>
            ))}
          </select>
        </div> */}
        {/* <div className="mb-3 d-flex justify-content-between align-items-center">
          <label className="form-label ">Product Number({productNumber.length})</label>
          <select
            className="form-select "
            value={selectedProductNumber}
            onChange={(e) => setSelectedProductNumber(e.target.value)}
          >
            <option value="">Select Product</option>
            {productNumber.map((prn, index) => (
              <option key={index} value={prn}>
                {prn}
              </option>
            ))}
          </select>
        </div> */}






        
      {/* { showModal?  <Draggable bounds={{ top: -80, left: -900, right: 300, bottom: 60 }}

 ref={nodeRef}>
      <div className="table-main position-absolute top-0 bg-white d-flex flex-column shadow z-3"  >
      

<div className=" d-flex justify-content-between align-items-center mx-4">
  <h5> Search Results({filterResult.length})</h5>
<button onClick={()=>{setShowModal(false)}}>
  X
</button>
</div>
        <div className="table-main1 p-1">
   
      <table border={1}>
        <thead >
          <tr >
            <th >EQID</th>
            <th>Manufacturer</th>
            <th>EQType</th>
            <th>MfgProdLine</th>
            <th>MfgProdNo</th>
            <th>ShapeID</th>
          </tr>
        </thead>
        <tbody>
         {filterResult.length!=0?filterResult?.map((item,index)=>( <tr key={index}>
          <td >{item.EQID}</td>
            <td>{item.Manufacturer}</td>
            <td>{item.EQType}</td>
            <td>{item.MfgProdLine}</td>
            <td>{item.MfgProdNo}</td>
            <td>{item.ShapeID}</td>
          </tr>)):<tr>
            <td colSpan={6}>No Data</td></tr>}
        </tbody>

      </table>
      </div>
    
     
    </div>  </Draggable>:null} */}





    {/* <Draggable>
        <div
          style={{
            width: 200,
            height: 100,
            backgroundColor: "#3498db",
            color: "#fff",
            textAlign: "center",
            lineHeight: "100px",
            borderRadius: "10px",
            cursor: "move",
          }}
        >
          Drag Me!
        </div>
      </Draggable> */}
    {/* <div className="dropdown">
      <button
        className="btn btn-primary dropdown-toggle"
        type="button"
        id="dropdownMenuButton"
        data-bs-toggle="dropdown"
        aria-expanded="false"
      >
        click
      </button>
      <ul className="dropdown-menu" aria-labelledby="dropdownMenuButton">
        <li>
          <button
            className="dropdown-item"
            onClick={() =>{}}
          >
            Option 1
          </button>
        </li>
        <li>
          <button
            className="dropdown-item"
            onClick={() => {}}
          >
            Option 2
          </button>
        </li>
        <li>
          <button
            className="dropdown-item"
            onClick={() =>{}}
          >
            Option 3
          </button>
        </li>
      </ul>
    </div> */}





      const manufacturerApi = async () => {
    try {
      const startTime = performance.now();
      // https://wandering-meadow-b4e6.rahul-p-dd9.workers.dev
      const response = await axios.post(
        "https://workers.rahul-p-dd9.workers.dev/manufacturer",
        {
          // apiToken:'7rIiBBGVbZu8Mo9fB1sTuEelJHo_PwU64HSYtBlN',
          // accountId:"dd9b190e5bb824e610cd76610082c40b",
          // databaseId:'dcc9bc13-e2fa-4687-8c6e-9b43fda04a58',
          search: keywords,
          condition: condition,
        }
      );
      console.log("response", response);
      console.log("response1", response?.data.manufacturers);
      const allManufacturers = await response?.data?.manufacturers;
      console.log(allManufacturers);
      const manufacturerNames = [
        ...new Set(allManufacturers?.map((item) => item)),
      ];
      setManufacturers(manufacturerNames);
      const endTime = performance.now();
      setExecutionTime(((endTime - startTime) / 1000).toFixed(2));
    } catch (err) {
      console.log("err", err);
    }
  };




    const callCloudflareAPI = async () => {
    try {
      const response = await axios.post(
        "https://wandering-meadow-b4e6.rahul-p-dd9.workers.dev",
        {
          apiToken: "7rIiBBGVbZu8Mo9fB1sTuEelJHo_PwU64HSYtBlN",
          accountId: "dd9b190e5bb824e610cd76610082c40b",
          databaseId: "dcc9bc13-e2fa-4687-8c6e-9b43fda04a58",
          search: "cicago",
        }
      );
      console.log("Cloudflare API Response:", response);
    } catch (error) {
      console.error("Error calling Cloudflare API:", error);
    }
  };
